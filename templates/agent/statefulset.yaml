{{- if or (eq .Values.mode "cluster") (eq .Values.mode "activefailover") }}
{{ $name := (include "arangodb.agent.fullname" .) }}
{{ $serviceName := printf "%s-internal" (include "arangodb.agent.fullname" .)  }}
{{ $replicas := .Values.agent.replicas }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}
  labels:
    {{- include "arangodb.agent.labels" . | nindent 4 }}
spec:
  serviceName: {{ $serviceName }}
  replicas: {{ $replicas }}
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      {{- include "arangodb.agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.global.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arangodb.agent.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "arangodb.serviceAccountName" . }}
      volumes:
        - name: lifecycle
          emptyDir: {}
        {{- if not .Values.auth.jwtSecret.existingFile }}
        - name: cluster-jwt
          secret:
            defaultMode: 420
            secretName: {{ include "arangodb.jwtSecret.secretName" . }}
        {{- end }}
      initContainers:
        - name: init-lifecycle
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/bin/arangodb_operator
            - lifecycle
            - copy
            - '--target'
            - /lifecycle/tools
          volumeMounts:
            - mountPath: /lifecycle/tools
              name: lifecycle
      containers:
        - name: server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - '/usr/sbin/arangod'
            - '--agency.activate=true'
            - '--agency.supervision=true'
            - '--agency.size={{ $replicas }}'
            {{- range untilStep 0 (int $replicas) 1 }}
            - '--agency.endpoint=tcp://{{ $name }}-{{ . }}.{{ $serviceName }}:8531'
            {{- end }}
            - '--agency.my-address=tcp://$(MY_POD_NAME).{{ $serviceName }}:8531'
            - '--server.endpoint=tcp://[::]:8531'
            - '--database.directory=/agent-data'
            - '--server.authentication=true'
            - '--server.jwt-secret-keyfile={{ include "arangodb.jwtSecret.mountPath" . }}'
          lifecycle:
            preStop:
              exec:
                command:
                  - /lifecycle/tools/arangodb_operator
                  - lifecycle
                  - preStop
          livenessProbe:
            exec:
              command:
                - /lifecycle/tools/arangodb_operator
                - lifecycle
                - probe
                - '--endpoint=/_api/version'
                - '--auth'
            failureThreshold: 10
            initialDelaySeconds: 900
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /agent-data
              name: data
            - mountPath: /lifecycle/tools
              name: lifecycle
            {{- if not .Values.auth.jwtSecret.existingFile }}
            - mountPath: {{ include "arangodb.jwtSecret.mountPath" . }}
              name: cluster-jwt
            {{- end }}
          ports:
            - containerPort: 8531
              name: server
              protocol: TCP
          env:
            - name: ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY
              valueFrom:
                resourceFieldRef:
                  containerName: server
                  resource: limits.memory
            - name: ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES
              valueFrom:
                resourceFieldRef:
                  containerName: server
                  resource: limits.cpu
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            {{- toYaml .Values.agent.resources | nindent 12 }}
      {{- include "imagePullSecrets" . | nindent 6 }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.agent.storage.accessMode | default "ReadWriteOnce" }}
        resources:
          requests:
            storage: {{ .Values.agent.storage.size }}
        {{- if .Values.agent.storage.storageClass }}
        storageClassName: {{ .Values.agent.storage.storageClass }}
        {{- end }}
{{- end }}
