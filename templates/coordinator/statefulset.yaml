{{- if eq .Values.mode "cluster" }}
{{- $name := include "arangodb.coordinator.fullname" . }}
{{- $serviceName := printf "%s-internal" (include "arangodb.coordinator.fullname" .)  }}
{{- $agentName := include "arangodb.agent.fullname" . }}
{{- $agentServiceName := printf "%s-internal" (include "arangodb.agent.fullname" .)  }}
{{- $replicas := .Values.coordinator.replicas }}
{{- $serverContainerPort := 8529 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}
  labels:
    {{- include "arangodb.coordinator.labels" . | nindent 4 }}
spec:
  serviceName: {{ $serviceName }}
  replicas: {{ $replicas }}
  podManagementPolicy: OrderedReady
  minReadySeconds: {{ .Values.coordinator.minReadySeconds }}
  selector:
    matchLabels:
      {{- include "arangodb.coordinator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.global.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arangodb.coordinator.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        {{- include "arangodb.coordinator.affinity" . | nindent 8 }}
      serviceAccountName: {{ include "arangodb.serviceAccountName" . }}
      volumes:
        {{ include "arangodb.coordinator.volumes" . | nindent 8 }}
      containers:
        - name: server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - '/usr/sbin/arangod'
            - '--cluster.my-role=COORDINATOR'
            {{- range untilStep 0 (int .Values.agent.replicas) 1 }}
            - '--cluster.agency-endpoint=tcp://{{ $agentName }}-{{ . }}.{{ $agentServiceName }}:8529'
            {{- end }}
            - '--cluster.my-address=tcp://$(MY_POD_NAME).{{ $serviceName }}:8529'
            - '--server.endpoint=tcp://[::]:8529'
            - '--server.authentication=true'
            - '--server.jwt-secret-keyfile={{ include "arangodb.jwtSecret.path" . }}'
            - '--database.directory=/data'
            - '--cluster.min-replication-factor={{ .Values.coordinator.clusterMinReplicationFactor }}'
            {{- if .Values.coordinator.logLevel }}
            - '--log.level={{ .Values.coordinator.logLevel }}'
            {{- end }}
          livenessProbe:
            exec:
              command:
              - '/bin/sh'
              - '-c'
              - 'wget --spider --header "$(arangodb auth header --auth.jwt-secret={{ include "arangodb.jwtSecret.path" . }})" 127.0.0.1:{{ $serverContainerPort }}/_api/version'
            failureThreshold: 5
            initialDelaySeconds: 900
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /data
              name: data
            {{ include "arangodb.coordinator.mounts" . | nindent 12 }}
          ports:
            - containerPort: 8529
              name: server
              protocol: TCP
          env:
            - name: ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY
              valueFrom:
                resourceFieldRef:
                  containerName: server
                  resource: limits.memory
            - name: ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES
              valueFrom:
                resourceFieldRef:
                  containerName: server
                  resource: limits.cpu
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            {{- toYaml .Values.coordinator.resources | nindent 12 }}
      {{- include "imagePullSecrets" . | nindent 6 }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.coordinator.storage.accessMode | default "ReadWriteOnce" }}
        resources:
          requests:
            storage: {{ .Values.coordinator.storage.size }}
        {{- if .Values.coordinator.storage.storageClass }}
        storageClassName: {{ .Values.coordinator.storage.storageClass }}
        {{- end }}
{{- end }}
